{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvraj\\\\ecoproject\\\\frontend\\\\src\\\\Components\\\\ProductDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom'; // Import useParams for accessing route parameters\nimport React, { useState, useEffect } from 'react';\n// ... other imports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductDetails() {\n  _s();\n  const [product, setProduct] = useState(null);\n  const [error, setError] = useState(null);\n  const {\n    productId\n  } = useParams();\n  useEffect(() => {\n    fetchProduct(productId).then(data => setProduct(data)).catch(error => setError(error.message));\n  }, [productId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this); // Display the error message\n  }\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading product details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  async function fetchProduct(productId) {\n    try {\n      const response = await fetch(`/product/${productId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Check for valid JSON content type header\n      if (response.headers.get('Content-Type') !== 'application/json') {\n        throw new Error('Invalid response content type. Expected application/json');\n      }\n      const data = await response.text(); // Get the entire response as text\n\n      // Try parsing as JSON (might still fail if HTML is returned)\n      try {\n        const product = await JSON.parse(data);\n        return product; // Return the parsed product\n      } catch (parseError) {\n        console.error('Error parsing response as JSON:', parseError);\n        // Handle the error (e.g., display an error message to the user)\n        throw new Error('Error fetching product: Invalid response format');\n      }\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      throw error; // Re-throw the error for handling in the component\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"\",\n      src: product.image,\n      className: \"img-fluid product-thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"product-title\",\n      children: product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      className: \"product-price\",\n      children: [\"Rs\", product.new_price, \".00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductDetails, \"qlPFWuG6iq7EDEtFwPe9ZmCZ/wU=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetails;\nexport default ProductDetails;\nvar _c;\n$RefreshReg$(_c, \"ProductDetails\");","map":{"version":3,"names":["useParams","React","useState","useEffect","jsxDEV","_jsxDEV","ProductDetails","_s","product","setProduct","error","setError","productId","fetchProduct","then","data","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","response","fetch","ok","Error","status","headers","get","text","JSON","parse","parseError","console","className","alt","src","image","name","new_price","description","_c","$RefreshReg$"],"sources":["C:/Users/yuvraj/ecoproject/frontend/src/Components/ProductDetails.js"],"sourcesContent":["import { useParams } from 'react-router-dom'; // Import useParams for accessing route parameters\r\nimport React, { useState, useEffect } from 'react';\r\n// ... other imports\r\n\r\nfunction ProductDetails() {\r\n  const [product, setProduct] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const { productId } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchProduct(productId)\r\n      .then(data => setProduct(data))\r\n      .catch(error => setError(error.message));\r\n  }, [productId]);\r\n  if (error) {\r\n    return <div>Error: {error}</div>; // Display the error message\r\n  }\r\n  if (!product) {\r\n    return <div>Loading product details...</div>;\r\n  }\r\n\r\n\r\n\r\n  async function fetchProduct(productId) {\r\n    try {\r\n      const response = await fetch(`/product/${productId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      // Check for valid JSON content type header\r\n      if (response.headers.get('Content-Type') !== 'application/json') {\r\n        throw new Error('Invalid response content type. Expected application/json');\r\n      }\r\n  \r\n      const data = await response.text(); // Get the entire response as text\r\n  \r\n      // Try parsing as JSON (might still fail if HTML is returned)\r\n      try {\r\n        const product = await JSON.parse(data);\r\n        return product; // Return the parsed product\r\n      } catch (parseError) {\r\n        console.error('Error parsing response as JSON:', parseError);\r\n        // Handle the error (e.g., display an error message to the user)\r\n        throw new Error('Error fetching product: Invalid response format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching product:', error);\r\n      throw error; // Re-throw the error for handling in the component\r\n    }\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"product-details\">\r\n      <img alt=\"\" src={product.image} className=\"img-fluid product-thumbnail\" />\r\n      <h3 className=\"product-title\">{product.name}</h3>\r\n      <strong className=\"product-price\">Rs{product.new_price}.00</strong>\r\n      <p>{product.description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}