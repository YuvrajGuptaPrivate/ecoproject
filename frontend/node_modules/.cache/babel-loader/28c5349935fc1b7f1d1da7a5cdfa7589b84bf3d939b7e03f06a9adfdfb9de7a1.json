{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvraj\\\\ecoproject\\\\frontend\\\\src\\\\Components\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDefaultCart = () => {\n  // Return an empty object to represent an empty cart\n  return {};\n};\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    console.log(\"Cart updated:\", cartItems);\n    fetchCartData(); // Retrieve cart data on page load\n  }, [cartItems]);\n  const fetchCartData = async () => {\n    const token = localStorage.getItem('token');\n    console.log('token:', token); // Log the token to verify its existence\n\n    if (token) {\n      try {\n        const response = await fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            token: localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n          }\n        });\n        const cartData = response.data;\n        setCartItems(cartData);\n      } catch (error) {\n        if (error.response) {\n          // handle error response\n          console.error(error.response.data);\n        } else {\n          // handle other errors\n          console.error(error);\n        }\n      }\n    } else {\n      console.error('Token not found in local storage');\n    }\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.text()).then(data => console.log(data));\n    }\n  };\n  const removefromcart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removefromcart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"C0t16SvOWIK4gY+M8zG4I8MtzbU=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","getDefaultCart","CartContext","CartProvider","children","_s","cartItems","setCartItems","console","log","fetchCartData","token","localStorage","getItem","response","fetch","method","headers","Accept","cartData","data","error","addToCart","itemId","prev","body","JSON","stringify","then","text","removefromcart","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yuvraj/ecoproject/frontend/src/Components/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\n\r\nconst getDefaultCart = () => {\r\n  // Return an empty object to represent an empty cart\r\n  return {};\r\n};\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartItems,setCartItems]=useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    console.log(\"Cart updated:\", cartItems);\r\n    fetchCartData(); // Retrieve cart data on page load\r\n    \r\n  }, [cartItems]);\r\n\r\n\r\n  \r\n\r\n\r\n  const fetchCartData = async () => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('token:', token); // Log the token to verify its existence\r\n\r\n  if (token) {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/getcart', {\r\n        method:'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const cartData = response.data;\r\n      setCartItems(cartData);\r\n    } catch (error) {\r\n      if (error.response) {\r\n        // handle error response\r\n        console.error(error.response.data);\r\n      } else {\r\n        // handle other errors\r\n        console.error(error);\r\n      }\r\n    }\r\n  } else {\r\n    console.error('Token not found in local storage');\r\n  }\r\n};\r\n\r\n  \r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({...prev, [itemId]: (prev[itemId] || 0) + 1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/addtocart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.text())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  const removefromcart = (itemId) => {\r\n    setCartItems((prev) => ({...prev,[itemId]:prev[itemId]-1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/removefromcart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/form-data',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.json())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  \r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removefromcart  }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartProvider, CartContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}