{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvraj\\\\ecoproject\\\\frontend\\\\src\\\\Components\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDefaultCart = () => {\n  // Return an empty object to represent an empty cart\n  return {};\n};\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log(\"Cart updated:\", cartItems);\n    fetchCartData(); // Retrieve cart data on page load\n  }, [cartItems]);\n  const fetchCartData = async () => {\n    if (localStorage.getItem('token')) {\n      setLoading(true);\n      try {\n        const response = await axios.post('http://localhost:4000/getcart', {}, {\n          headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        const cartData = response.data;\n        setCartItems(cartData);\n      } catch (error) {\n        if (error.response) {\n          // handle error response\n          console.error(error.response.data);\n        } else {\n          // handle other errors\n          console.error(error);\n        }\n      }\n    }\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const removefromcart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  if (loading) {\n    // <--- Display loading indicator while fetching data\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removefromcart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"T7N94h9QuM/DyKCEo8fjOSZmPsA=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","getDefaultCart","CartContext","CartProvider","children","_s","cartItems","setCartItems","loading","setLoading","console","log","fetchCartData","localStorage","getItem","response","post","headers","Accept","Authorization","cartData","data","error","addToCart","itemId","prev","fetch","method","token","body","JSON","stringify","then","json","removefromcart","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/yuvraj/ecoproject/frontend/src/Components/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst getDefaultCart = () => {\r\n  // Return an empty object to represent an empty cart\r\n  return {};\r\n};\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartItems,setCartItems]=useState(getDefaultCart());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Cart updated:\", cartItems);\r\n    fetchCartData(); // Retrieve cart data on page load\r\n    \r\n  }, [cartItems]);\r\n\r\n\r\n  \r\n\r\n\r\n  const fetchCartData = async () => {\r\n    if (localStorage.getItem('token')) {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.post('http://localhost:4000/getcart', {}, {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        const cartData = response.data;\r\n        setCartItems(cartData);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          // handle error response\r\n          console.error(error.response.data);\r\n        } else {\r\n          // handle other errors\r\n          console.error(error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({...prev, [itemId]:prev[itemId]+1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/addtocart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/form-data',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.json())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  const removefromcart = (itemId) => {\r\n    setCartItems((prev) => ({...prev,[itemId]:prev[itemId]-1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/removefromcart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/form-data',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.json())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  if (loading) { // <--- Display loading indicator while fetching data\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removefromcart  }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartProvider, CartContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}