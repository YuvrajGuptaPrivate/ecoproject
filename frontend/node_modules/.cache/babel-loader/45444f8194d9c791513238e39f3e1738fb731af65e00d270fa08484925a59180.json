{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvraj\\\\ecoproject\\\\frontend\\\\src\\\\Components\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [isCartDataFetched, setIsCartDataFetched] = useState(false);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    if (!isCartDataFetched) {\n      fetchCartData().then(data => {\n        setCartItems(data);\n        setIsCartDataFetched(true);\n        fetchProducts();\n      });\n    }\n  }, [isCartDataFetched]);\n  const fetchCartData = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            token: localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const cartItems = await response.json();\n        return cartItems;\n      } catch (error) {\n        console.error('Failed to fetch cart data:', error);\n      }\n    }\n  };\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/allproducts');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.text()).then(data => console.log(data));\n    }\n  };\n  const removefromcart = itemId => {\n    setCartItems(prev => {\n      const newCartItems = {\n        ...prev\n      };\n      if (newCartItems[itemId] > 1) {\n        newCartItems[itemId] -= 1;\n      } else {\n        delete newCartItems[itemId]; // Remove the item from the cart if quantity reaches 0\n      }\n      return newCartItems;\n    });\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let total = 0;\n    Object.keys(cartItems).forEach(key => {\n      if (products[key] && products[key].new_price) {\n        total += products[key].new_price * cartItems[key];\n      }\n    });\n    return total;\n  };\n  const getTotalCartitems = () => {\n    let totalitems = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalitems += cartItems[item];\n      }\n    }\n    return totalitems;\n  };\n  const saveSizeData = async (productId, size) => {\n    if (localStorage.getItem('token')) {\n      try {\n        const response = await fetch('http://localhost:4000/saveSizeData', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            token: localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            productId,\n            size\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.error('Failed to save size data:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      getTotalCartitems,\n      getTotalCartAmount,\n      cartItems,\n      products,\n      addToCart,\n      removefromcart,\n      saveSizeData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"KGFm1eLSxcV8CXLsidaFdaHb9gM=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","getDefaultCart","cart","index","CartProvider","children","_s","cartItems","setCartItems","isCartDataFetched","setIsCartDataFetched","products","setProducts","fetchCartData","then","data","fetchProducts","token","localStorage","getItem","response","fetch","method","headers","Accept","ok","Error","status","json","error","console","addToCart","itemId","prev","body","JSON","stringify","text","log","removefromcart","newCartItems","getTotalCartAmount","total","Object","keys","forEach","key","new_price","getTotalCartitems","totalitems","item","saveSizeData","productId","size","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yuvraj/ecoproject/frontend/src/Components/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nconst CartContext = createContext();\r\n\r\nconst getDefaultCart = ()=>{\r\n  let cart = {};\r\n  for (let index = 0;index<300+1;index++){\r\n    cart[index]=0;\r\n  }\r\n  return cart;\r\n}\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartItems,setCartItems]=useState(getDefaultCart());\r\n  const [isCartDataFetched, setIsCartDataFetched] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n\r\nuseEffect(() => {\r\n    if (!isCartDataFetched) {\r\n      fetchCartData().then(data => {\r\n        setCartItems(data);\r\n        setIsCartDataFetched(true);\r\n        fetchProducts();\r\n      });\r\n    }\r\n  }, [isCartDataFetched])\r\n\r\n\r\n\r\n\r\n\r\n  const fetchCartData = async () => {\r\n    const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/getcart', {\r\n        method:'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      const cartItems = await response.json();\r\n      return cartItems;\r\n    } catch (error) {\r\n      console.error('Failed to fetch cart data:', error);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/allproducts');\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({...prev, [itemId]: (prev[itemId] || 0) + 1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/addtocart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.text())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  const removefromcart = (itemId) => {\r\n    setCartItems((prev) => {\r\n      const newCartItems = { ...prev };\r\n      if (newCartItems[itemId] > 1) {\r\n        newCartItems[itemId] -= 1;\r\n      } else {\r\n        delete newCartItems[itemId]; // Remove the item from the cart if quantity reaches 0\r\n      }\r\n      return newCartItems;\r\n    });\r\n\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/removefromcart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/form-data',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.json())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n \r\n\r\n  const getTotalCartAmount = () => {\r\n    let total = 0;\r\n    Object.keys(cartItems).forEach((key) => {\r\n      if (products[key] && products[key].new_price) {\r\n        total += products[key].new_price * cartItems[key];\r\n      }\r\n    });\r\n    return total;\r\n  };\r\n\r\n\r\nconst getTotalCartitems=()=>{\r\n  let totalitems=0;\r\n  for(const item in cartItems)\r\n  {\r\n    if(cartItems[item]>0)\r\n    {\r\n      totalitems+= cartItems[item];\r\n    }\r\n  }\r\n  return totalitems;\r\n}\r\n\r\nconst saveSizeData = async (productId, size) => {\r\n  if (localStorage.getItem('token')) {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/saveSizeData', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          token: localStorage.getItem('token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ productId, size }),\r\n      });\r\n      const data = await response.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error('Failed to save size data:', error);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n  return (\r\n    <CartContext.Provider value={{ getTotalCartitems, getTotalCartAmount,cartItems,products, addToCart, removefromcart ,saveSizeData , }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartProvider, CartContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}