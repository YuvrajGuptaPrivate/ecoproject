{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvraj\\\\ecoproject\\\\frontend\\\\src\\\\Components\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState();\n  const [cartData, setCartData] = useState(null);\n  useEffect(() => {\n    fetchCartData().then(data => setCartData(data)); // Retrieve cart data on page load\n  }, [cartItems]);\n  console.log(cartItems);\n  const fetchCartData = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            token: localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const cartData = await response.json();\n        console.log(cartData);\n        return cartData;\n      } catch (error) {\n        console.error('Failed to fetch cart data:', error);\n      }\n    }\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.text()).then(data => console.log(data));\n    }\n  };\n  const removefromcart = itemId => {\n    setCartItems(prev => {\n      const newCartItems = {\n        ...prev\n      };\n      if (newCartItems[itemId] > 1) {\n        newCartItems[itemId] -= 1;\n      } else {\n        delete newCartItems[itemId]; // Remove the item from the cart if quantity reaches 0\n      }\n      return newCartItems;\n    });\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      cartData,\n      addToCart,\n      removefromcart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"9HFxcj1fp+l/gMroXVom9ZUu2MU=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","cartData","setCartData","fetchCartData","then","data","console","log","token","localStorage","getItem","response","fetch","method","headers","Accept","ok","Error","status","json","error","addToCart","itemId","prev","body","JSON","stringify","text","removefromcart","newCartItems","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yuvraj/ecoproject/frontend/src/Components/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartItems,setCartItems]=useState();\r\n  const [cartData, setCartData] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchCartData().then(data => setCartData(data)); // Retrieve cart data on page load\r\n    \r\n  }, [cartItems]);\r\n\r\n  console.log(cartItems);\r\n\r\n\r\n  const fetchCartData = async () => {\r\n    const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/getcart', {\r\n        method:'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      const cartData = await response.json();\r\n      console.log(cartData);\r\n      return cartData;\r\n    } catch (error) {\r\n      console.error('Failed to fetch cart data:', error);\r\n    }\r\n  }\r\n}\r\n\r\n  \r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({...prev, [itemId]: (prev[itemId] || 0) + 1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/addtocart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.text())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  const removefromcart = (itemId) => {\r\n    setCartItems((prev) => {\r\n      const newCartItems = { ...prev };\r\n      if (newCartItems[itemId] > 1) {\r\n        newCartItems[itemId] -= 1;\r\n      } else {\r\n        delete newCartItems[itemId]; // Remove the item from the cart if quantity reaches 0\r\n      }\r\n      return newCartItems;\r\n    });\r\n\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/removefromcart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/form-data',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.json())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  \r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems,cartData, addToCart, removefromcart  }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartProvider, CartContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}