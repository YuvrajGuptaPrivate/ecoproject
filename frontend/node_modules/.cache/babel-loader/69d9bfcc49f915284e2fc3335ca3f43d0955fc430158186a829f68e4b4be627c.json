{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvraj\\\\ecoproject\\\\frontend\\\\src\\\\Components\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState();\n  const [isCartDataFetched, setIsCartDataFetched] = useState(false);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    if (!isCartDataFetched) {\n      fetchCartData().then(data => {\n        setCartItems(data);\n        setIsCartDataFetched(true);\n      });\n    }\n  }, [isCartDataFetched]);\n  const fetchCartData = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await fetch('http://localhost:4000/getcart', {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            token: localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const cartItems = await response.json();\n        return cartItems;\n      } catch (error) {\n        console.error('Failed to fetch cart data:', error);\n      }\n    }\n  };\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/allproducts');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error(error);\n    }\n    fetchProducts();\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.text()).then(data => console.log(data));\n    }\n  };\n  const removefromcart = itemId => {\n    setCartItems(prev => {\n      const newCartItems = {\n        ...prev\n      };\n      if (newCartItems[itemId] > 1) {\n        newCartItems[itemId] -= 1;\n      } else {\n        delete newCartItems[itemId]; // Remove the item from the cart if quantity reaches 0\n      }\n      return newCartItems;\n    });\n    if (localStorage.getItem('token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          token: localStorage.getItem('token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = products.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      getTotalCartAmount,\n      cartItems,\n      products,\n      addToCart,\n      removefromcart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"XL+4CE/6LK2KKDLX16k3zBLCk3U=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isCartDataFetched","setIsCartDataFetched","products","setProducts","fetchCartData","then","data","token","localStorage","getItem","response","fetch","method","headers","Accept","ok","Error","status","json","error","console","fetchProducts","addToCart","itemId","prev","body","JSON","stringify","text","log","removefromcart","newCartItems","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/yuvraj/ecoproject/frontend/src/Components/CartContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartItems,setCartItems]=useState();\r\n  const [isCartDataFetched, setIsCartDataFetched] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isCartDataFetched) {\r\n      fetchCartData().then(data => {\r\n        setCartItems(data);\r\n        setIsCartDataFetched(true);\r\n      });\r\n    }\r\n  }, [isCartDataFetched])\r\n\r\n  const fetchCartData = async () => {\r\n    const token = localStorage.getItem('token');\r\n  if (token) {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/getcart', {\r\n        method:'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n  \r\n      const cartItems = await response.json();\r\n      return cartItems;\r\n    } catch (error) {\r\n      console.error('Failed to fetch cart data:', error);\r\n    }\r\n  }\r\n}\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/allproducts');\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    fetchProducts();\r\n  };\r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({...prev, [itemId]: (prev[itemId] || 0) + 1}));\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/addtocart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/json',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.text())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  const removefromcart = (itemId) => {\r\n    setCartItems((prev) => {\r\n      const newCartItems = { ...prev };\r\n      if (newCartItems[itemId] > 1) {\r\n        newCartItems[itemId] -= 1;\r\n      } else {\r\n        delete newCartItems[itemId]; // Remove the item from the cart if quantity reaches 0\r\n      }\r\n      return newCartItems;\r\n    });\r\n\r\n    if(localStorage.getItem('token')){\r\n      fetch('http://localhost:4000/removefromcart',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/form-data',\r\n          token:localStorage.getItem('token'),\r\n          'Content-Type':'application/json',\r\n        },\r\n        body:JSON.stringify({\"itemId\":itemId}),\r\n      })\r\n      .then((response)=>response.json())\r\n      .then((data)=>console.log(data));\r\n    }\r\n }\r\n\r\n  const getTotalCartAmount = ()=>{\r\n    let totalAmount = 0;\r\n    for(const item in cartItems)\r\n    {\r\n      if(cartItems[item]>0)\r\n      {\r\n        let itemInfo = products.find((product)=>product.id===Number(item))\r\n        totalAmount+=itemInfo.new_price*cartItems[item];\r\n      }\r\n    }\r\n    return totalAmount;\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={{ getTotalCartAmount,cartItems,products, addToCart, removefromcart  }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport { CartProvider, CartContext };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}